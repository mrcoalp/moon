name: linux

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  gcc-debug:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_args: [ -d -t, -d -t --static ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.build_args }}
      - name: Test
        run: bash platform-scripts/linux/test.sh -d
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-gcc-debug
          path: test_results.xml
          retention-days: 5

  gcc-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_args: [ -r -t, -r -t --static ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.build_args }}
      - name: Test
        run: bash platform-scripts/linux/test.sh -r
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-gcc-release
          path: test_results.xml
          retention-days: 5

  clang-debug:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_args: [ -d -t --clang, -d -t --static --clang ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.build_args }}
      - name: Test
        run: bash platform-scripts/linux/test.sh -d
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-clang-debug
          path: test_results.xml
          retention-days: 5

  clang-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_args: [ -r -t --clang, -r -t --static --clang ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.build_args }}
      - name: Test
        run: bash platform-scripts/linux/test.sh -r
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results-clang-release
          path: test_results.xml
          retention-days: 5

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environment
        run: sudo apt-get install gcovr -y
      - name: Build coverage
        run: |
          bash platform-scripts/linux/build.sh -t --coverage
          bash platform-scripts/linux/test.sh --coverage
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage
          path: |
            moon_coverage_html/
            moon_coverage.xml
          retention-days: 5
      - name: Upload code coverage to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash) -f moon_coverage.xml
