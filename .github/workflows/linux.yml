name: linux

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  shared:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_args: [ -t --coverage, -r -t --coverage, -t --clang, -r -t --clang ]
        test_args: [ --coverage, -d ]

    steps:
      - uses: actions/checkout@v2

      - name: Prepare environment
        run: sudo apt-get install gcovr -y

      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.build_args }}

      - name: Test
        run: bash platform-scripts/linux/test.sh ${{ matrix.test_args }}

      - name: Upload test results and coverage
        uses: actions/upload-artifact@v2
        with:
          name: test-results-coverage
          path: |
            test_results.xml
            moon_coverage_html/
            moon_coverage.xml
          retention-days: 5

      - name: Upload code coverage to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash) -f moon_coverage.xml

  static:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_args: [ -t --coverage --static, -r -t --coverage --static, -t --clang --static, -r -t --clang  --static ]
        test_args: [ --coverage, -d ]

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.build_args }}

      - name: Test
        run: bash platform-scripts/linux/test.sh ${{ matrix.test_args }}
