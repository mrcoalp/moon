name: linux

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  gcc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        args: [ -d -t, -d -t --static, -r -t, -r -t --static ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.args }}
      - name: Test
        run: bash platform-scripts/linux/test.sh ${{ matrix.args }}

  clang:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        args: [ -d -t --clang, -d -t --static --clang, -r -t --clang, -r -t --static --clang ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: bash platform-scripts/linux/build.sh ${{ matrix.args }}
      - name: Test
        run: bash platform-scripts/linux/test.sh ${{ matrix.args }}

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environment
        run: sudo apt-get install gcovr -y
      - name: Build coverage
        run: |
          bash platform-scripts/linux/build.sh -t --coverage
          bash platform-scripts/linux/test.sh --coverage
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage
          path: |
            test_results.xml
            moon_coverage_html/
            moon_coverage.xml
          retention-days: 5
      - name: Upload code coverage to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash) -f moon_coverage.xml
